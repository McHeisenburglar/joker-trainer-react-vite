$card-table-distance: 100px;

$transform-all: translate(-50%, -50%);

$card-timing-function: cubic-bezier(0.16, 1.23, 0.2, 0.98);
$transition: all 700ms $card-timing-function;

@mixin card-transform($position) {
	$entrance-distance: 150%;
	$rotation-degrees: 0deg;

	$transform-scale: scale(0.8);

	$transform-direction: translateY(-$card-table-distance);
	$transform-origin: translateY(-$entrance-distance);

	$exit-distance: 200px;
	$exit-left-rotation: 0deg;
	$exit-top-rotation: 0deg;
	$exit-right-rotation: 0deg;
	$exit-bottom-rotation: 0deg;

	@if $position == top {
		$transform-direction: translateY(-$card-table-distance);
		$rotation-degrees: 180deg;

		$exit-left-rotation: -90deg;
		$exit-top-rotation: 180deg;
		$exit-right-rotation: 90deg;
		$exit-bottom-rotation: 180deg;
	} @else if $position == right {
		$transform-direction: translateX($card-table-distance);
		$rotation-degrees: -90deg;

		$exit-left-rotation: -90deg;
		$exit-top-rotation: 0deg;
		$exit-right-rotation: -90deg;
		$exit-bottom-rotation: -180deg;
	} @else if $position == bottom {
		$transform-direction: translateY($card-table-distance);
		$rotation-degrees: 0deg;

		// exit rotation
		$exit-left-rotation: -90deg;
		$exit-top-rotation: 0deg;
		$exit-right-rotation: 90deg;
		$exit-bottom-rotation: 0deg;
	} @else if $position == left {
		$transform-direction: translateX(-$card-table-distance);
		$rotation-degrees: 90deg;

		$exit-left-rotation: 90deg;
		$exit-top-rotation: 0deg;
		$exit-right-rotation: 90deg;
		$exit-bottom-rotation: -180deg;
	} @else {
		@error "Unknown direction #{$direction}.";
	}

	$transform-rotate: rotate($rotation-degrees);

	.#{$position} {
		.animated-card.enter {
			opacity: 0;
			perspective: 200px;
			transform: $transform-all $transform-rotate translateY(400px);
		}
		.animated-card.enter-active {
			transition: $transition;

			opacity: 1;
			transform: $transform-all $transform-rotate translateY(100px);
		}
		.animated-card.enter-done {
			opacity: 1;
		}
	}

	$exit-timing-function: cubic-bezier(0.82, -0.35, 0.54, 1.03);
	$exit-duration: 800ms;

	.#{$position} {
		.animated-card {
			&.goes-left,
			&.goes-right,
			&.goes-top,
			&.goes-bottom {
				&.exit {
					transform: translate(-50%, -50%) rotate($rotation-degrees)
						translateY(100px);
				}
				&.exit-active {
					transition: transform $exit-duration $exit-timing-function,
						opacity 400ms cubic-bezier(0.78, 0.02, 0.78, 0.93) 700ms;
					opacity: 0;
				}
			}

			&.goes-top.exit-active {
				transform: translate(-50%, -50%) translateY(-$exit-distance)
					rotate($exit-top-rotation);
			}
			&.goes-right.exit-active {
				transform: translate(-50%, -50%) translateX($exit-distance)
					rotate($exit-right-rotation);
			}
			&.goes-bottom.exit-active {
				transform: translate(-50%, -50%) translateY($exit-distance)
					rotate($exit-bottom-rotation);
			}
			&.goes-left.exit-active {
				transform: translate(-50%, -50%) translateX(-$exit-distance)
					rotate($exit-left-rotation);
			}
		}
	}
}

@include card-transform(top);
@include card-transform(right);
@include card-transform(bottom);
@include card-transform(left);

// Exit animation
.animated-card.fade.exit {
	z-index: -1;
	opacity: 1;
	position: absolute;
}
.animated-card.fade.exit-active {
	opacity: 0;
	transition: all 200ms;
	position: absolute;
}

.animated-card.fade.exit-done {
	opacity: 0;
}

.animated-card.card-slot.exit {
	z-index: -100;
	opacity: 0;
	position: absolute;
}
.animated-card.card-slot.exit-active {
	opacity: 0;
	transition: all 200ms;
	position: absolute;
}

.animated-card.card-slot.exit-done {
	opacity: 0;
}
